-- =====================================================
-- SUPPLY CHAIN DATA WAREHOUSE - 3NF LAYER
-- Script 1: DDL + Default Rows (Run ONCE)
-- =====================================================

-- Connect to dwh_dev database
\c dwh_dev_pgsql;

-- =====================================================
-- SECTION 1: SCHEMA CREATION
-- =====================================================

CREATE SCHEMA IF NOT EXISTS BL_3NF;
SET search_path = BL_3NF, public;

-- =====================================================
-- SECTION 2: SEQUENCES CREATION
-- =====================================================

CREATE SEQUENCE IF NOT EXISTS SEQ_CE_CUSTOMERS START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_PRODUCTS START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_DEPARTMENTS START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_BRANDS START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_PRODUCT_STATUSES START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_CATEGORIES START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_SALES_REPRESENTATIVES START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_GEOGRAPHIES START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_REGIONS START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_COUNTRIES START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_STATES START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_CITIES START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_WAREHOUSES START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_CARRIERS START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_ORDER_STATUSES START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_PAYMENT_METHODS START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_SHIPPING_MODES START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_DELIVERY_STATUSES START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_ORDERS START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_ORDER_LINES START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_SHIPMENTS START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_SHIPMENT_LINES START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_DELIVERIES START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_TRANSACTIONS START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_BRAND_CATEGORIES START 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CE_PRODUCT_CATEGORIES START 1;

-- =====================================================
-- SECTION 3: DIMENSION TABLES (SCD TYPE 1)
-- =====================================================

-- Regions (top level)
CREATE TABLE IF NOT EXISTS CE_REGIONS
(
    REGION_ID     BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_REGIONS'),
    REGION_SRC_ID VARCHAR(50)  NOT NULL,
    REGION_NAME   VARCHAR(100) NOT NULL,
    REGION_CODE   VARCHAR(10)  NULL,
    SOURCE_SYSTEM VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY VARCHAR(100) NOT NULL,
    TA_INSERT_DT  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_REGIONS PRIMARY KEY (REGION_ID)
);

-- Countries
CREATE TABLE IF NOT EXISTS CE_COUNTRIES
(
    COUNTRY_ID     BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_COUNTRIES'),
    COUNTRY_SRC_ID VARCHAR(50)  NOT NULL,
    COUNTRY_NAME   VARCHAR(100) NOT NULL,
    COUNTRY_CODE   VARCHAR(10)  NULL,
    REGION_ID      BIGINT       NOT NULL,
    SOURCE_SYSTEM  VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY  VARCHAR(100) NOT NULL,
    TA_INSERT_DT   TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT   TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_COUNTRIES PRIMARY KEY (COUNTRY_ID)
);

-- States
CREATE TABLE IF NOT EXISTS CE_STATES
(
    STATE_ID      BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_STATES'),
    STATE_SRC_ID  VARCHAR(50)  NOT NULL,
    STATE_NAME    VARCHAR(100) NOT NULL,
    STATE_CODE    VARCHAR(10)  NULL,
    COUNTRY_ID    BIGINT       NOT NULL,
    SOURCE_SYSTEM VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY VARCHAR(100) NOT NULL,
    TA_INSERT_DT  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_STATES PRIMARY KEY (STATE_ID)
);

-- Cities
CREATE TABLE IF NOT EXISTS CE_CITIES
(
    CITY_ID       BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_CITIES'),
    CITY_SRC_ID   VARCHAR(50)  NOT NULL,
    CITY_NAME     VARCHAR(100) NOT NULL,
    CITY_CODE     VARCHAR(10)  NULL,
    STATE_ID      BIGINT       NOT NULL,
    SOURCE_SYSTEM VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY VARCHAR(100) NOT NULL,
    TA_INSERT_DT  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_CITIES PRIMARY KEY (CITY_ID)
);

-- Geographies
CREATE TABLE IF NOT EXISTS CE_GEOGRAPHIES
(
    GEOGRAPHY_ID     BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_GEOGRAPHIES'),
    GEOGRAPHY_SRC_ID VARCHAR(50)  NOT NULL,
    CITY_ID          BIGINT       NOT NULL,
    SOURCE_SYSTEM    VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY    VARCHAR(100) NOT NULL,
    TA_INSERT_DT     TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT     TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_GEOGRAPHIES PRIMARY KEY (GEOGRAPHY_ID)
);

-- Departments
CREATE TABLE IF NOT EXISTS CE_DEPARTMENTS
(
    DEPARTMENT_ID     BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_DEPARTMENTS'),
    DEPARTMENT_SRC_ID VARCHAR(50)  NOT NULL,
    DEPARTMENT_NAME   VARCHAR(100) NOT NULL,
    SOURCE_SYSTEM     VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY     VARCHAR(100) NOT NULL,
    TA_INSERT_DT      TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT      TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_DEPARTMENTS PRIMARY KEY (DEPARTMENT_ID)
);

-- Categories
CREATE TABLE IF NOT EXISTS CE_CATEGORIES
(
    CATEGORY_ID     BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_CATEGORIES'),
    CATEGORY_SRC_ID VARCHAR(50)  NOT NULL,
    CATEGORY_NAME   VARCHAR(100) NOT NULL,
    CATEGORY_CODE   VARCHAR(10)  NULL,
    DEPARTMENT_ID   BIGINT       NOT NULL,
    SOURCE_SYSTEM   VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY   VARCHAR(100) NOT NULL,
    TA_INSERT_DT    TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT    TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_CATEGORIES PRIMARY KEY (CATEGORY_ID)
);

-- Brands
CREATE TABLE IF NOT EXISTS CE_BRANDS
(
    BRAND_ID      BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_BRANDS'),
    BRAND_SRC_ID  VARCHAR(50)  NOT NULL,
    BRAND_NAME    VARCHAR(100) NOT NULL,
    -- CATEGORY_ID BIGINT NOT NULL,
    SOURCE_SYSTEM VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY VARCHAR(100) NOT NULL,
    TA_INSERT_DT  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_BRANDS PRIMARY KEY (BRAND_ID)
);

-- Product Statuses
CREATE TABLE IF NOT EXISTS CE_PRODUCT_STATUSES
(
    STATUS_ID     BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_PRODUCT_STATUSES'),
    STATUS_SRC_ID VARCHAR(50)  NOT NULL,
    STATUS_NAME   VARCHAR(50)  NOT NULL,
    SOURCE_SYSTEM VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY VARCHAR(100) NOT NULL,
    TA_INSERT_DT  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_PRODUCT_STATUSES PRIMARY KEY (STATUS_ID)
);

-- Create CE_BRAND_CATEGORIES table
CREATE TABLE IF NOT EXISTS CE_BRAND_CATEGORIES
(
    BRAND_CATEGORY_ID     BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_BRAND_CATEGORIES'),
    BRAND_ID              BIGINT       NOT NULL,
    CATEGORY_ID           BIGINT       NOT NULL,
    RELATIONSHIP_STRENGTH INT          NULL     DEFAULT 3,
    PRODUCT_COUNT         INT          NULL     DEFAULT 0,
    SOURCE_SYSTEM         VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY         VARCHAR(100) NOT NULL,
    TA_INSERT_DT          TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT          TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_BRAND_CATEGORIES PRIMARY KEY (BRAND_CATEGORY_ID),
    CONSTRAINT UK_CE_BRAND_CATEGORIES UNIQUE (BRAND_ID, CATEGORY_ID)
);

-- Create CE_PRODUCT_CATEGORIES table
CREATE TABLE IF NOT EXISTS CE_PRODUCT_CATEGORIES
(
    PRODUCT_CATEGORY_ID BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_PRODUCT_CATEGORIES'),
    PRODUCT_ID          BIGINT       NOT NULL,
    CATEGORY_ID         BIGINT       NOT NULL,
    IS_PRIMARY          CHAR(3)      NOT NULL DEFAULT 'N',
    SOURCE_SYSTEM       VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY       VARCHAR(100) NOT NULL,
    TA_INSERT_DT        TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT        TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_PRODUCT_CATEGORIES PRIMARY KEY (PRODUCT_CATEGORY_ID),
    CONSTRAINT UK_CE_PRODUCT_CATEGORIES UNIQUE (PRODUCT_ID, CATEGORY_ID)
);

-- Customers
CREATE TABLE IF NOT EXISTS CE_CUSTOMERS
(
    CUSTOMER_ID            BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_CUSTOMERS'),
    CUSTOMER_SRC_ID        VARCHAR(50)  NOT NULL,
    CUSTOMER_FIRST_NAME    VARCHAR(100) NOT NULL,
    CUSTOMER_LAST_NAME     VARCHAR(100) NOT NULL,
    CUSTOMER_GENDER        VARCHAR(10)  NOT NULL,
    CUSTOMER_YEAR_OF_BIRTH INTEGER      NOT NULL,
    CUSTOMER_EMAIL         VARCHAR(255) NOT NULL,
    CUSTOMER_SEGMENT       VARCHAR(50)  NOT NULL,
    SOURCE_SYSTEM          VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY          VARCHAR(100) NOT NULL,
    TA_INSERT_DT           TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT           TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_CUSTOMERS PRIMARY KEY (CUSTOMER_ID)
);

-- Sales Representatives
CREATE TABLE IF NOT EXISTS CE_SALES_REPRESENTATIVES
(
    SALES_REP_ID     BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_SALES_REPRESENTATIVES'),
    SALES_REP_SRC_ID VARCHAR(50)  NOT NULL,
    SALES_REP_NAME   VARCHAR(100) NOT NULL,
    --GEOGRAPHY_ID     BIGINT       NULL,
    SOURCE_SYSTEM    VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY    VARCHAR(100) NOT NULL,
    TA_INSERT_DT     TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT     TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_SALES_REPRESENTATIVES PRIMARY KEY (SALES_REP_ID)
);

-- Warehouses
CREATE TABLE IF NOT EXISTS CE_WAREHOUSES
(
    WAREHOUSE_ID     BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_WAREHOUSES'),
    WAREHOUSE_SRC_ID VARCHAR(50)  NOT NULL,
    WAREHOUSE_NAME   VARCHAR(100) NOT NULL,
--     GEOGRAPHY_ID BIGINT NOT NULL, --Geography belongs in the shipping/order context, not the warehouse master data
    SOURCE_SYSTEM    VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY    VARCHAR(100) NOT NULL,
    TA_INSERT_DT     TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT     TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_WAREHOUSES PRIMARY KEY (WAREHOUSE_ID)
);

-- Carriers
CREATE TABLE IF NOT EXISTS CE_CARRIERS
(
    CARRIER_ID     BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_CARRIERS'),
    CARRIER_SRC_ID VARCHAR(50)  NOT NULL,
    CARRIER_NAME   VARCHAR(100) NOT NULL,
    CARRIER_TYPE   VARCHAR(50)  NULL,
    SOURCE_SYSTEM  VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY  VARCHAR(100) NOT NULL,
    TA_INSERT_DT   TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT   TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_CARRIERS PRIMARY KEY (CARRIER_ID)
);

-- Order Statuses
CREATE TABLE IF NOT EXISTS CE_ORDER_STATUSES
(
    ORDER_STATUS_ID     BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_ORDER_STATUSES'),
    ORDER_STATUS_SRC_ID VARCHAR(50)  NOT NULL,
    ORDER_STATUS        VARCHAR(50)  NOT NULL,
    SOURCE_SYSTEM       VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY       VARCHAR(100) NOT NULL,
    TA_INSERT_DT        TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT        TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_ORDER_STATUSES PRIMARY KEY (ORDER_STATUS_ID)
);

-- Payment Methods
CREATE TABLE IF NOT EXISTS CE_PAYMENT_METHODS
(
    PAYMENT_METHOD_ID     BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_PAYMENT_METHODS'),
    PAYMENT_METHOD_SRC_ID VARCHAR(50)  NOT NULL,
    PAYMENT_METHOD        VARCHAR(100) NOT NULL,
    SOURCE_SYSTEM         VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY         VARCHAR(100) NOT NULL,
    TA_INSERT_DT          TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT          TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_PAYMENT_METHODS PRIMARY KEY (PAYMENT_METHOD_ID)
);

-- Shipping Modes
CREATE TABLE IF NOT EXISTS CE_SHIPPING_MODES
(
    SHIPPING_MODE_ID     BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_SHIPPING_MODES'),
    SHIPPING_MODE_SRC_ID VARCHAR(50)  NOT NULL,
    SHIPPING_MODE        VARCHAR(50)  NOT NULL,
    SOURCE_SYSTEM        VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY        VARCHAR(100) NOT NULL,
    TA_INSERT_DT         TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT         TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_SHIPPING_MODES PRIMARY KEY (SHIPPING_MODE_ID)
);

-- Delivery Statuses
CREATE TABLE IF NOT EXISTS CE_DELIVERY_STATUSES
(
    DELIVERY_STATUS_ID     BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_DELIVERY_STATUSES'),
    DELIVERY_STATUS_SRC_ID VARCHAR(50)  NOT NULL,
    DELIVERY_STATUS        VARCHAR(50)  NOT NULL,
    SOURCE_SYSTEM          VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY          VARCHAR(100) NOT NULL,
    TA_INSERT_DT           TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT           TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_DELIVERY_STATUSES PRIMARY KEY (DELIVERY_STATUS_ID)
);

-- =====================================================
-- SECTION 4: SCD TYPE 2 TABLE
-- =====================================================

-- Products (SCD Type 2)
CREATE TABLE IF NOT EXISTS CE_PRODUCTS_SCD
(
    PRODUCT_ID          BIGINT       NOT NULL DEFAULT NEXTVAL('SEQ_CE_PRODUCTS'),
    START_DT            DATE         NOT NULL DEFAULT '1990-01-01',
    PRODUCT_SRC_ID      VARCHAR(50)  NOT NULL,
    PRODUCT_NAME        VARCHAR(255) NOT NULL,
    BRAND_ID            BIGINT       NOT NULL,
    PRIMARY_CATEGORY_ID BIGINT       NOT NULL,
    STATUS_ID           BIGINT       NOT NULL,
    END_DT              DATE         NOT NULL DEFAULT '9999-12-31',
    IS_ACTIVE           VARCHAR(1)   NOT NULL DEFAULT 'Y',
    SOURCE_SYSTEM       VARCHAR(50)  NOT NULL,
    SOURCE_ENTITY       VARCHAR(100) NOT NULL,
    TA_INSERT_DT        TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT        TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_PRODUCTS_SCD PRIMARY KEY (PRODUCT_ID, START_DT)
);

-- =====================================================
-- SECTION 5: FACT TABLES
-- =====================================================

-- Orders
CREATE TABLE IF NOT EXISTS CE_ORDERS
(
    ORDER_ID          BIGINT         NOT NULL DEFAULT NEXTVAL('SEQ_CE_ORDERS'),
--     ORDER_SRC_ID      VARCHAR(50)    NOT NULL,
    CUSTOMER_ID       BIGINT         NOT NULL,
    SALES_REP_ID      BIGINT         NOT NULL,
    ORDER_STATUS_ID   BIGINT         NOT NULL,
    PAYMENT_METHOD_ID BIGINT         NOT NULL,
    ORDER_DATE        DATE           NOT NULL,
    ORDER_TOTAL       DECIMAL(15, 2) NULL,
--     SOURCE_SYSTEM     VARCHAR(50)    NOT NULL,
--     SOURCE_ENTITY     VARCHAR(100)   NOT NULL,
    EVENT_DT          DATE           NOT NULL,
    TA_INSERT_DT      TIMESTAMP      NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT      TIMESTAMP      NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_ORDERS PRIMARY KEY (ORDER_ID)
);

-- Order Lines
CREATE TABLE IF NOT EXISTS CE_ORDER_LINES
(
    ORDER_LINE_ID BIGINT         NOT NULL DEFAULT NEXTVAL('SEQ_CE_ORDER_LINES'),
--     ORDER_LINE_SRC_ID VARCHAR(50)    NOT NULL,
    ORDER_ID      BIGINT         NOT NULL,
    PRODUCT_ID    BIGINT         NOT NULL,
    QUANTITY      INTEGER        NOT NULL,
    UNIT_PRICE    DECIMAL(15, 2) NOT NULL,
    UNIT_COST     DECIMAL(15, 2) NULL,
    LINE_TOTAL    DECIMAL(15, 2) NOT NULL,
--     SOURCE_SYSTEM     VARCHAR(50)    NOT NULL,
--     SOURCE_ENTITY     VARCHAR(100)   NOT NULL,
    TA_INSERT_DT  TIMESTAMP      NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT  TIMESTAMP      NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_ORDER_LINES PRIMARY KEY (ORDER_LINE_ID)
);

-- Shipments
CREATE TABLE IF NOT EXISTS CE_SHIPMENTS
(
    SHIPMENT_ID      BIGINT         NOT NULL DEFAULT NEXTVAL('SEQ_CE_SHIPMENTS'),
--     SHIPMENT_SRC_ID  VARCHAR(50)    NOT NULL,
    ORDER_ID         BIGINT         NOT NULL,
    GEOGRAPHY_ID     BIGINT         NOT NULL,
    SHIPPING_MODE_ID BIGINT         NOT NULL,
    WAREHOUSE_ID     BIGINT         NOT NULL,
    CARRIER_ID       BIGINT         NOT NULL,
    SHIP_DATE        DATE           NOT NULL,
    SHIPPING_COST    DECIMAL(15, 2) NULL,
--     SOURCE_SYSTEM    VARCHAR(50)    NOT NULL,
--     SOURCE_ENTITY    VARCHAR(100)   NOT NULL,
    EVENT_DT         DATE           NOT NULL,
    TA_INSERT_DT     TIMESTAMP      NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT     TIMESTAMP      NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_SHIPMENTS PRIMARY KEY (SHIPMENT_ID)
);


-- Create independent shipment lines table
CREATE TABLE BL_3NF.CE_SHIPMENT_LINES
(
    shipment_line_id     SERIAL PRIMARY KEY,

    -- Natural business key (shipment + product + customer combination)
    shipment_line_src_id VARCHAR(255) NOT NULL,

    -- Foreign key references (independent of order lines)
    shipment_id          INTEGER      NOT NULL,
    product_id           INTEGER      NOT NULL,
    customer_id          INTEGER      NOT NULL, -- Direct customer reference

    -- Shipment line metrics
    shipped_quantity     INTEGER               DEFAULT 0,

    -- Audit fields
    source_system        VARCHAR(10)  NOT NULL DEFAULT 'LMS',
    source_entity        VARCHAR(50)  NOT NULL DEFAULT 'SRC_LMS',
    ta_insert_dt         TIMESTAMP             DEFAULT CURRENT_TIMESTAMP,
    ta_update_dt         TIMESTAMP             DEFAULT CURRENT_TIMESTAMP,

    -- Constraints
    CONSTRAINT uk_shipment_lines_business_key UNIQUE (shipment_line_src_id, source_system)

);


-- Create indexes for performance
CREATE INDEX idx_shipment_lines_shipment_id ON BL_3NF.CE_SHIPMENT_LINES (shipment_id);
CREATE INDEX idx_shipment_lines_product_id ON BL_3NF.CE_SHIPMENT_LINES (product_id);
CREATE INDEX idx_shipment_lines_customer_id ON BL_3NF.CE_SHIPMENT_LINES (customer_id);
CREATE INDEX idx_shipment_lines_source ON BL_3NF.CE_SHIPMENT_LINES (source_system, source_entity);


-- Deliveries
CREATE TABLE IF NOT EXISTS BL_3NF.CE_DELIVERIES
(
    delivery_id        BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    shipment_src_id    VARCHAR(50)  NOT NULL, -- Business key (shipment level)
    shipment_id        BIGINT       NOT NULL, -- FK to CE_SHIPMENTS
    delivery_status_id BIGINT,                -- FK to CE_DELIVERY_STATUSES
    delivery_date      DATE,                  -- Actual delivery date
    delivery_days      INTEGER,               -- Days from ship to delivery
    on_time_delivery   BOOLEAN,               -- Was shipment delivered on time
    event_dt           DATE         NOT NULL, -- Event date for partitioning
    source_system      VARCHAR(50)  NOT NULL DEFAULT 'LMS',
    source_entity      VARCHAR(100) NOT NULL DEFAULT 'SRC_LMS',
    ta_insert_dt       TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    ta_update_dt       TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,

    -- Constraints
    CONSTRAINT ce_deliveries_uk UNIQUE (shipment_src_id, source_system)
);


-- Transactions
CREATE TABLE IF NOT EXISTS CE_TRANSACTIONS
(
    TRANSACTION_ID   BIGINT         NOT NULL DEFAULT NEXTVAL('SEQ_CE_TRANSACTIONS'),
--     TRANSACTION_SRC_ID VARCHAR(50)    NOT NULL,
    ORDER_ID         BIGINT         NOT NULL,
    SALES_AMOUNT     DECIMAL(15, 2) NOT NULL,
    TRANSACTION_DATE DATE           NOT NULL,
--     SOURCE_SYSTEM      VARCHAR(50)    NOT NULL,
--     SOURCE_ENTITY      VARCHAR(100)   NOT NULL,
    EVENT_DT         DATE           NOT NULL,
    TA_INSERT_DT     TIMESTAMP      NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TA_UPDATE_DT     TIMESTAMP      NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CE_TRANSACTIONS PRIMARY KEY (TRANSACTION_ID)
);

-- =====================================================
-- SECTION 6: FOREIGN KEY CONSTRAINTS
-- =====================================================

-- Geographic hierarchy
ALTER TABLE CE_COUNTRIES
    ADD CONSTRAINT FK_CE_COUNTRIES_REGION
        FOREIGN KEY (REGION_ID) REFERENCES CE_REGIONS (REGION_ID);

ALTER TABLE CE_STATES
    ADD CONSTRAINT FK_CE_STATES_COUNTRY
        FOREIGN KEY (COUNTRY_ID) REFERENCES CE_COUNTRIES (COUNTRY_ID);

ALTER TABLE CE_CITIES
    ADD CONSTRAINT FK_CE_CITIES_STATE
        FOREIGN KEY (STATE_ID) REFERENCES CE_STATES (STATE_ID);

ALTER TABLE CE_GEOGRAPHIES
    ADD CONSTRAINT FK_CE_GEOGRAPHIES_CITY
        FOREIGN KEY (CITY_ID) REFERENCES CE_CITIES (CITY_ID);

-- Product hierarchy
ALTER TABLE CE_CATEGORIES
    ADD CONSTRAINT FK_CE_CATEGORIES_DEPARTMENT
        FOREIGN KEY (DEPARTMENT_ID) REFERENCES CE_DEPARTMENTS (DEPARTMENT_ID);

-- ALTER TABLE CE_BRANDS ADD CONSTRAINT FK_CE_BRANDS_CATEGORY
--     FOREIGN KEY (CATEGORY_ID) REFERENCES CE_CATEGORIES(CATEGORY_ID);

ALTER TABLE CE_PRODUCTS_SCD
    ADD CONSTRAINT FK_CE_PRODUCTS_BRAND
        FOREIGN KEY (BRAND_ID) REFERENCES CE_BRANDS (BRAND_ID);

ALTER TABLE CE_PRODUCTS_SCD
    ADD CONSTRAINT FK_CE_BRANDS_CATEGORY_PRIMARY
        FOREIGN KEY (PRIMARY_CATEGORY_ID) REFERENCES CE_CATEGORIES (CATEGORY_ID);

ALTER TABLE CE_PRODUCTS_SCD
    ADD CONSTRAINT FK_CE_PRODUCTS_STATUS
        FOREIGN KEY (STATUS_ID) REFERENCES CE_PRODUCT_STATUSES (STATUS_ID);

-- Add foreign key constraints for CE_BRAND_CATEGORIES
ALTER TABLE CE_BRAND_CATEGORIES
    ADD CONSTRAINT FK_CE_BRAND_CATEGORIES_BRAND
        FOREIGN KEY (BRAND_ID) REFERENCES CE_BRANDS (BRAND_ID);

ALTER TABLE CE_BRAND_CATEGORIES
    ADD CONSTRAINT FK_CE_BRAND_CATEGORIES_CATEGORY
        FOREIGN KEY (CATEGORY_ID) REFERENCES CE_CATEGORIES (CATEGORY_ID);

-- Add check constraint for relationship strength
ALTER TABLE CE_BRAND_CATEGORIES
    ADD CONSTRAINT CHK_CE_BRAND_CATEGORIES_STRENGTH
        CHECK (RELATIONSHIP_STRENGTH IN (-1, 1, 2, 3));


ALTER TABLE CE_PRODUCT_CATEGORIES
    ADD CONSTRAINT FK_CE_PRODUCT_CATEGORIES_CATEGORY
        FOREIGN KEY (CATEGORY_ID) REFERENCES CE_CATEGORIES (CATEGORY_ID);

-- Add check constraint for is_primary flag
ALTER TABLE CE_PRODUCT_CATEGORIES
    ADD CONSTRAINT CHK_CE_PRODUCT_CATEGORIES_PRIMARY
        CHECK (IS_PRIMARY IN ('n.a', 'Y', 'N'));

-- Business entity relationships
-- --ALTER TABLE CE_SALES_REPRESENTATIVES
--     ADD CONSTRAINT FK_CE_SALES_REPS_GEOGRAPHY
--         FOREIGN KEY (GEOGRAPHY_ID) REFERENCES CE_GEOGRAPHIES (GEOGRAPHY_ID);

-- ALTER TABLE CE_WAREHOUSES ADD CONSTRAINT FK_CE_WAREHOUSES_GEOGRAPHY
--     FOREIGN KEY (GEOGRAPHY_ID) REFERENCES CE_GEOGRAPHIES(GEOGRAPHY_ID);

-- Fact table relationships
ALTER TABLE CE_ORDERS
    ADD CONSTRAINT FK_CE_ORDERS_CUSTOMER
        FOREIGN KEY (CUSTOMER_ID) REFERENCES CE_CUSTOMERS (CUSTOMER_ID);

ALTER TABLE CE_ORDERS
    ADD CONSTRAINT FK_CE_ORDERS_SALES_REP
        FOREIGN KEY (SALES_REP_ID) REFERENCES CE_SALES_REPRESENTATIVES (SALES_REP_ID);

ALTER TABLE CE_ORDERS
    ADD CONSTRAINT FK_CE_ORDERS_STATUS
        FOREIGN KEY (ORDER_STATUS_ID) REFERENCES CE_ORDER_STATUSES (ORDER_STATUS_ID);

ALTER TABLE CE_ORDERS
    ADD CONSTRAINT FK_CE_ORDERS_PAYMENT_METHOD
        FOREIGN KEY (PAYMENT_METHOD_ID) REFERENCES CE_PAYMENT_METHODS (PAYMENT_METHOD_ID);

ALTER TABLE CE_ORDER_LINES
    ADD CONSTRAINT FK_CE_ORDER_LINES_ORDER
        FOREIGN KEY (ORDER_ID) REFERENCES CE_ORDERS (ORDER_ID);

-- Note: FK to SCD table is logical only on 3NF layer as per requirements
-- ALTER TABLE CE_ORDER_LINES ADD CONSTRAINT FK_CE_ORDER_LINES_PRODUCT
--     FOREIGN KEY (PRODUCT_ID) REFERENCES CE_PRODUCTS_SCD(PRODUCT_ID);

ALTER TABLE CE_SHIPMENTS
    ADD CONSTRAINT FK_CE_SHIPMENTS_ORDER
        FOREIGN KEY (ORDER_ID) REFERENCES CE_ORDERS (ORDER_ID);

ALTER TABLE CE_SHIPMENTS
    ADD CONSTRAINT FK_CE_SHIPMENTS_GEOGRAPHY
        FOREIGN KEY (GEOGRAPHY_ID) REFERENCES CE_GEOGRAPHIES (GEOGRAPHY_ID);

ALTER TABLE CE_SHIPMENTS
    ADD CONSTRAINT FK_CE_SHIPMENTS_SHIPPING_MODE
        FOREIGN KEY (SHIPPING_MODE_ID) REFERENCES CE_SHIPPING_MODES (SHIPPING_MODE_ID);

ALTER TABLE CE_SHIPMENTS
    ADD CONSTRAINT FK_CE_SHIPMENTS_WAREHOUSE
        FOREIGN KEY (WAREHOUSE_ID) REFERENCES CE_WAREHOUSES (WAREHOUSE_ID);

ALTER TABLE CE_SHIPMENTS
    ADD CONSTRAINT FK_CE_SHIPMENTS_CARRIER
        FOREIGN KEY (CARRIER_ID) REFERENCES CE_CARRIERS (CARRIER_ID);

ALTER TABLE CE_SHIPMENT_LINES
    ADD CONSTRAINT fk_shipment_lines_shipment FOREIGN KEY (shipment_id) REFERENCES BL_3NF.CE_SHIPMENTS (shipment_id);

ALTER TABLE BL_3NF.CE_SHIPMENT_LINES
ADD COLUMN product_start_dt DATE;

ALTER TABLE BL_3NF.CE_SHIPMENT_LINES
ADD COLUMN shipment_src_id VARCHAR(255);

-- Drop the old constraint
ALTER TABLE BL_3NF.CE_SHIPMENT_LINES
DROP CONSTRAINT IF EXISTS uk_shipment_lines_business_key;

-- Add the new one with shipment_src_id
ALTER TABLE BL_3NF.CE_SHIPMENT_LINES
ADD CONSTRAINT uk_shipment_lines_business_key
UNIQUE (shipment_line_src_id, source_system);

ALTER TABLE BL_3NF.CE_SHIPMENT_LINES
ADD CONSTRAINT fk_shipment_lines_product
FOREIGN KEY (product_id, product_start_dt)
REFERENCES BL_3NF.CE_PRODUCTS_SCD (product_id, start_dt);
ALTER TABLE CE_SHIPMENT_LINES
    ADD CONSTRAINT fk_shipment_lines_customer FOREIGN KEY (customer_id) REFERENCES BL_3NF.CE_CUSTOMERS (customer_id);

ALTER TABLE CE_DELIVERIES
    ADD CONSTRAINT ce_deliveries_shipment_fk FOREIGN KEY (shipment_id) REFERENCES BL_3NF.CE_SHIPMENTS (shipment_id);

ALTER TABLE CE_DELIVERIES
    ADD CONSTRAINT ce_deliveries_status_fk FOREIGN KEY (delivery_status_id) REFERENCES BL_3NF.CE_DELIVERY_STATUSES (delivery_status_id)


ALTER TABLE CE_TRANSACTIONS
    ADD CONSTRAINT FK_CE_TRANSACTIONS_ORDER
        FOREIGN KEY (ORDER_ID) REFERENCES CE_ORDERS (ORDER_ID);


--- fot using Merge
-- 1. CE_REGIONS
ALTER TABLE BL_3NF.CE_REGIONS
    ADD CONSTRAINT uk_regions_src_system
        UNIQUE (region_src_id, source_system);

-- 2. CE_COUNTRIES
ALTER TABLE BL_3NF.CE_COUNTRIES
    ADD CONSTRAINT uk_countries_src_system
        UNIQUE (country_src_id, source_system);

-- 3. CE_STATES - Use state + country as composite key
ALTER TABLE BL_3NF.CE_STATES
    ADD CONSTRAINT uk_states_composite
        UNIQUE (state_src_id, country_id, source_system);

-- 4. CE_CITIES - Use city + state + country as composite key
ALTER TABLE BL_3NF.CE_CITIES
    ADD CONSTRAINT uk_cities_composite
        UNIQUE (city_src_id, state_id, source_system);

-- 5. CE_GEOGRAPHIES
ALTER TABLE BL_3NF.CE_GEOGRAPHIES
    ADD CONSTRAINT uk_geographies_src_system
        UNIQUE (geography_src_id, source_system);

-- 6. CE_DEPARTMENTS
ALTER TABLE BL_3NF.CE_DEPARTMENTS
    ADD CONSTRAINT uk_departments_src_system
        UNIQUE (department_src_id, source_system);

-- 7. CE_CATEGORIES
ALTER TABLE BL_3NF.CE_CATEGORIES
    ADD CONSTRAINT uk_categories_src_system
        UNIQUE (category_src_id, source_system);

-- 8. CE_BRANDS
ALTER TABLE BL_3NF.CE_BRANDS
    ADD CONSTRAINT uk_brands_src_system
        UNIQUE (brand_src_id, source_system);

-- 9. CE_PRODUCT_STATUSES
ALTER TABLE BL_3NF.CE_PRODUCT_STATUSES
    ADD CONSTRAINT uk_product_statuses_src_system
        UNIQUE (status_src_id, source_system);

-- 10. CE_CUSTOMERS
ALTER TABLE BL_3NF.CE_CUSTOMERS
    ADD CONSTRAINT uk_customers_src_system
        UNIQUE (customer_src_id, source_system);

-- 11. CE_SALES_REPRESENTATIVES
ALTER TABLE BL_3NF.CE_SALES_REPRESENTATIVES
    ADD CONSTRAINT uk_sales_reps_src_system
        UNIQUE (sales_rep_src_id, source_system);

-- 12. CE_WAREHOUSES
ALTER TABLE BL_3NF.CE_WAREHOUSES
    ADD CONSTRAINT uk_warehouses_src_system
        UNIQUE (warehouse_src_id, source_system);

-- 13. CE_CARRIERS
ALTER TABLE BL_3NF.CE_CARRIERS
    ADD CONSTRAINT uk_carriers_src_system
        UNIQUE (carrier_src_id, source_system);

-- 14. CE_ORDER_STATUSES
ALTER TABLE BL_3NF.CE_ORDER_STATUSES
    ADD CONSTRAINT uk_order_statuses_src_system
        UNIQUE (order_status_src_id, source_system);

-- 15. CE_PAYMENT_METHODS
ALTER TABLE BL_3NF.CE_PAYMENT_METHODS
    ADD CONSTRAINT uk_payment_methods_src_system
        UNIQUE (payment_method_src_id, source_system);

-- 16. CE_SHIPPING_MODES
ALTER TABLE BL_3NF.CE_SHIPPING_MODES
    ADD CONSTRAINT uk_shipping_modes_src_system
        UNIQUE (shipping_mode_src_id, source_system);

-- 17. CE_DELIVERY_STATUSES
ALTER TABLE BL_3NF.CE_DELIVERY_STATUSES
    ADD CONSTRAINT uk_delivery_statuses_src_system
        UNIQUE (delivery_status_src_id, source_system);

-- =====================================================
-- SECTION 7: INDEXES FOR PERFORMANCE
-- =====================================================

-- Source ID indexes for ETL lookups
CREATE INDEX IF NOT EXISTS IDX_CE_CUSTOMERS_SRC_ID ON CE_CUSTOMERS (CUSTOMER_SRC_ID);
CREATE INDEX IF NOT EXISTS IDX_CE_PRODUCTS_SRC_ID ON CE_PRODUCTS_SCD (PRODUCT_SRC_ID);
CREATE INDEX IF NOT EXISTS IDX_CE_DEPARTMENTS_SRC_ID ON CE_DEPARTMENTS (DEPARTMENT_SRC_ID);
CREATE INDEX IF NOT EXISTS IDX_CE_BRANDS_SRC_ID ON CE_BRANDS (BRAND_SRC_ID);
CREATE INDEX IF NOT EXISTS IDX_CE_CATEGORIES_SRC_ID ON CE_CATEGORIES (CATEGORY_SRC_ID);
-- CREATE INDEX IF NOT EXISTS IDX_CE_ORDERS_SRC_ID ON CE_ORDERS (ORDER_SRC_ID);
-- CREATE INDEX IF NOT EXISTS IDX_CE_ORDER_LINES_SRC_ID ON CE_ORDER_LINES (ORDER_LINE_SRC_ID);

-- Indexes for CE_BRAND_CATEGORIES CE_PRODUCT_CATEGORIES
CREATE INDEX IF NOT EXISTS IDX_CE_BRAND_CATEGORIES_BRAND_ID ON CE_BRAND_CATEGORIES (BRAND_ID);
CREATE INDEX IF NOT EXISTS IDX_CE_BRAND_CATEGORIES_CATEGORY_ID ON CE_BRAND_CATEGORIES (CATEGORY_ID);
CREATE INDEX IF NOT EXISTS IDX_CE_BRAND_CATEGORIES_STRENGTH ON CE_BRAND_CATEGORIES (RELATIONSHIP_STRENGTH);
CREATE INDEX IF NOT EXISTS IDX_CE_PRODUCT_CATEGORIES_PRODUCT_ID ON CE_PRODUCT_CATEGORIES (PRODUCT_ID);
CREATE INDEX IF NOT EXISTS IDX_CE_PRODUCT_CATEGORIES_CATEGORY_ID ON CE_PRODUCT_CATEGORIES (CATEGORY_ID);
CREATE INDEX IF NOT EXISTS IDX_CE_PRODUCT_CATEGORIES_PRIMARY ON CE_PRODUCT_CATEGORIES (IS_PRIMARY);

-- Date indexes for fact tables
CREATE INDEX IF NOT EXISTS IDX_CE_ORDERS_ORDER_DATE ON CE_ORDERS (ORDER_DATE);
CREATE INDEX IF NOT EXISTS IDX_CE_SHIPMENTS_SHIP_DATE ON CE_SHIPMENTS (SHIP_DATE);
CREATE INDEX IF NOT EXISTS IDX_CE_DELIVERIES_DELIVERY_DATE ON CE_DELIVERIES (DELIVERY_DATE);
CREATE INDEX IF NOT EXISTS IDX_CE_TRANSACTIONS_TRANSACTION_DATE ON CE_TRANSACTIONS (TRANSACTION_DATE);
-- Indexes for performance
CREATE INDEX IF NOT EXISTS idx_ce_deliveries_shipment_src_id ON BL_3NF.CE_DELIVERIES (shipment_src_id);
CREATE INDEX IF NOT EXISTS idx_ce_deliveries_shipment_id ON BL_3NF.CE_DELIVERIES (shipment_id);
CREATE INDEX IF NOT EXISTS idx_ce_deliveries_event_dt ON BL_3NF.CE_DELIVERIES (event_dt);


-- SCD2 specific indexes
CREATE INDEX IF NOT EXISTS IDX_CE_PRODUCTS_ACTIVE ON CE_PRODUCTS_SCD (PRODUCT_SRC_ID, IS_ACTIVE) WHERE IS_ACTIVE = 'Y';
CREATE INDEX IF NOT EXISTS IDX_CE_PRODUCTS_EFFECTIVE_DATE ON CE_PRODUCTS_SCD (START_DT, END_DT);


-- Critical index for temporal lookups
CREATE INDEX IF NOT EXISTS idx_products_scd_temporal_lookup
    ON BL_3NF.CE_PRODUCTS_SCD (product_src_id, source_system, start_dt, end_dt)
    WHERE product_id != -1;

-- Include columns index for even better performance
CREATE INDEX IF NOT EXISTS idx_products_scd_temporal_lookup_covering
    ON BL_3NF.CE_PRODUCTS_SCD (product_src_id, source_system, start_dt, end_dt)
    INCLUDE (product_id, is_active);

-- =====================================================
-- SECTION 9: VERIFICATION QUERIES
-- =====================================================
-- Verify table creation
SELECT schemaname,
       tablename,
       tableowner
FROM pg_tables
WHERE schemaname = 'bl_3nf'
ORDER BY tablename;

-- Verify foreign key constraints
SELECT tc.table_name,
       ccu.table_name  AS foreign_table_name,
       tc.constraint_name,
       tc.constraint_type,
       kcu.column_name,
       ccu.column_name AS foreign_column_name
FROM information_schema.table_constraints AS tc
         JOIN information_schema.key_column_usage AS kcu
              ON tc.constraint_name = kcu.constraint_name
                  AND tc.table_schema = kcu.table_schema
         JOIN information_schema.constraint_column_usage AS ccu
              ON ccu.constraint_name = tc.constraint_name
                  AND ccu.table_schema = tc.table_schema
WHERE tc.constraint_type = 'FOREIGN KEY'
  AND tc.table_schema = 'bl_3nf'
ORDER BY tc.table_name, tc.constraint_name;

